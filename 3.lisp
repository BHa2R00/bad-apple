(require "asdf")
(require "cffi")
(require "croatoan")
(load "u4.lisp")
(load "u8.lisp")

(defun threshold-chs (value maxim chs)
  (let((stp(/ maxim (1+(length chs)))))
	(do((n 0 (incf n)))
	  ((and
		 (>= value (* n stp))
		 (<= value (* (1+ n) stp)))
	   (nth n chs)))))

(defun refine-frame (v2 divx divy)
  (let*((dims(array-dimensions v2))
		(v3(make-array(list(/(nth 0 dims)divx)(/(nth 1 dims)divy))))
		(dims1(array-dimensions v3)))
	(dotimes(dimx(nth 0 dims1))
	  (dotimes(dimy(nth 1 dims1))
		(setf (aref v3 dimx dimy) (aref v2 (* dimx divx) (* dimy divy)))))
	v3))

(defun frame (file-num maxim)
  (let*((fn(with-output-to-string(s)(format s "p/~4,'0d.bmp" file-num)))
		(v1(cadr(assoc 'data (cdr(parse-bmp fn)))))
		(dims(array-dimensions v1))
		(v2(make-array dims)))
	(dotimes (dimx (nth 0 dims))
	  (dotimes (dimy (nth 1 dims))
		(setf (aref v2 (- (nth 0 dims) dimx 1) dimy) (threshold-chs (apply '+ (aref v1 dimx dimy)) maxim '("#" "*" "." nil nil)))))
	v2))

(defun display-frames (fn-start fn-end)
  (let((l1(make-array(list (- fn-end fn-start)):initial-element nil)))
	(do((fn fn-start (incf fn)))
	  ((= fn fn-end))
	  (setf(aref l1 (- fn fn-start))(refine-frame(frame fn 765) 6 2)))
	(de.anvi.ncurses:%initscr)
	(de.anvi.ncurses:%mvaddstr 0 0 "bad apple ,press to start")
	(de.anvi.ncurses:%getch)
	(dotimes (vn (length l1))
	  (sleep 0.1)
;	  (sleep 0.02)
	  (de.anvi.ncurses:%clear)
	  (let*((v1(aref l1 vn))
			(dims(array-dimensions v1)))
		(dotimes(dimx(nth 0 dims))
		  (dotimes(dimy(nth 1 dims))
			(when (aref v1 dimx dimy)
			  (de.anvi.ncurses:%mvaddstr dimx dimy (aref v1 dimx dimy))))))
	  (de.anvi.ncurses:%refresh))
	(de.anvi.ncurses:%getch)
	(de.anvi.ncurses:%endwin)))

(display-frames 1 1754)

